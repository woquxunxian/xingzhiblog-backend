server:
  port: 8081
  ssl:
    key-store: classpath:xxxxxxxx
    key-store-password: xxxxxxxxx
    key-store-type: JKS

spring:
  #应用
  application:
    name: XingzhiBlog
  #数据库
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mini_blog?useUnicode=true&characterEncoding=UTF-8&serverTimezone = Asia/Shanghai
#    username: root
#    password: root
#    connectionInitSqls: ["set names utf8mb4;"]
    initialSize: 10
    minIdle: 3
    maxActive: 200
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
#  devtools:
#    restart:
#      enabled: true  #设置开启热部署
  # redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    timeout: 1800000
    lettuce:
      pool:
        max-active: 20
        #最大阻塞等待时间（负数表示没限制）
        max-wait: -1
        max-idle: 5
        min-idle: 0
#mybatis配置
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.xingzhi.xingzhiblog.domain

# 日志配置
logging:
#  level:
#    com.xingzhi: debug
#    org.springframework: WARN
#    org.spring.springboot.dao: debug
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%15.15t] %-40.40c{1.} [%X{user}] : %m%n%xwEx"
  file:
    path: /log/xingzhiblog.log

#pageHelper分页配置
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

#微信相关数据
wx:
  appid: wxbd089ec7a8b57fc2
  secret: xxxxxxxxxxxxx

debug: true